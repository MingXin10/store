// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Product {
  id          String     @id @default(uuid())
  name        String
  company     String
  description String
  featured    Boolean
  imageUrl    String
  price       Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  clerkId     String
  favoriteList   Favorite[]
  reviewList     Review []
  cartItemList   CartItem[]
}

model Favorite {
  id        String   @id @default(uuid())
  clerkId   String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id             String   @id @default(uuid())
  clerkId        String
  rating         Int
  comment        String
  authorName     String
  authorImageUrl String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  product        Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId      String
}

model Cart {
  id              String   @id @default(uuid())
  clerkId         String
  cartItemList    CartItem[]
  totalItemCounts Int @default(0)
  subTotal        Int @default(0)
  shipping        Int @default(5)
  tax             Int @default(0)
  taxRate         Float @default(0.1)
  orderTotal      Int @default(0)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model CartItem {
  id        String   @id @default(uuid())
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    String
  amount    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id         String   @id @default(uuid())
  clerkId    String
  productCounts   Int  @default(0)
  orderTotal Int @default(0)
  tax        Int @default(0)
  shipping   Int @default(0)
  email      String
  isPaid     Boolean @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}